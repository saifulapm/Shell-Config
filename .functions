#!/usr/bin/env bash
#=============================================================================
# References:
# https://github.com/tylucaskelley/dotfiles/blob/master/src/.functions
#=============================================================================

# Starts a Python server, with optional port argument
#
# Params:
#     port - Optional port to serve at (defaults to 8080)
#
# Usage: server [port]
#
function serve() {
  python -m http.server "${1:-8080}"
}

# Recursively find and replace text within files in a directory
#
# Params:
#    old: Text to search for
#    new: Replacement text
#
# Usage: sub old new
function sub() {
  usage="usage: sub old new"

  if [ -z "$1" ] || [ -z "$2" ]; then
    echo "$usage"
    return 1
  fi

  if command -v rg &> /dev/null; then
    rg "$1" --files-with-matches * | xargs -r sed -i "s/$1/$2/g"
  else
    echo "fatal: ripgrep must be installed"
    return 1
  fi
}


# Create a good tmux setup or attach to an existing one
#
# Params:
#   name - session name (defaults to "work")
#
# Usage: mux [name]
#
function mux() {
  if [[ -z "$1" ]]; then
    TMUX_SESSION="work"
  else
    TMUX_SESSION="$1"
  fi

  tmux start-server

  if ! tmux has-session -t "$TMUX_SESSION" &> /dev/null; then
    # first window has 3 panes
    tmux new-session -s "$TMUX_SESSION" -n "main" -d
    tmux split-window -h -t "$TMUX_SESSION:0"
    tmux split-window -v -t "$TMUX_SESSION:0"

    # set up vim in full screen window
    tmux new-window -t "$TMUX_SESSION:1" -n "editor"
    tmux send-keys -t "$TMUX_SESSION:1" vim C-m

    # set up 4 equal panes, useful for watching logs
    tmux new-window -t "$TMUX_SESSION:2" -n "logs"
    tmux split-window -h -t "$TMUX_SESSION:2"
    tmux split-window -v -t "$TMUX_SESSION:2.0"
    tmux split-window -v -t "$TMUX_SESSION:2.2"
  fi

  # attach to first pane of first window
  tmux attach-session -t "$TMUX_SESSION:0.0"
}

